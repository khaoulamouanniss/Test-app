{"ast":null,"code":"var _jsxFileName = \"/home/khaoula/myApps/list-app/src/Components/Popup.js\";\nimport React from \"react\";\nimport \"./popup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Popup(props) {\n  const {\n    trigger,\n    setTrigger,\n    condition\n  } = props;\n  return trigger ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-btn\",\n        onClick: () => setTrigger(false),\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"image-popup\",\n        src: condition.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-popup\",\n        children: condition.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"snippet-popup\",\n        children: condition.snippet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"synonyms-popup\",\n        children: condition.synonyms\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keywords-popup\",\n        children: condition.keywords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this) : \"\";\n}\n_c = Popup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"sources":["/home/khaoula/myApps/list-app/src/Components/Popup.js"],"names":["React","Popup","props","trigger","setTrigger","condition","image","label","snippet","synonyms","keywords"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;AAGA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,UAAV;AAAsBC,IAAAA;AAAtB,MAAmCH,KAAzC;AACA,SAAOC,OAAO,gBACZ;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAE,MAAMC,UAAU,CAAC,KAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,GAAG,EAAEC,SAAS,CAACC;AAA5C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,kBAA8BD,SAAS,CAACE;AAAxC;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBAAgCF,SAAS,CAACG;AAA1C;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kBAAiCH,SAAS,CAACI;AAA3C;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kBAAiCJ,SAAS,CAACK;AAA3C;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADY,GAWV,EAXJ;AAYD;KAduBT,K","sourcesContent":["import React from \"react\";\nimport \"./popup.css\";\n\n\nexport default function Popup(props) {\n  const {trigger, setTrigger, condition} = props;\n  return trigger?(\n    <div className=\"popup\">\n      <div className=\"popup-inner\">\n        <button className=\"close-btn\" onClick={() => setTrigger(false)}>x</button>\n        <img className=\"image-popup\" src={condition.image}></img>\n          <div className=\"title-popup\">{condition.label}</div>\n          <div className=\"snippet-popup\">{condition.snippet}</div>\n          <div className=\"synonyms-popup\">{condition.synonyms}</div>\n          <div className=\"keywords-popup\">{condition.keywords}</div>\n      </div>      \n    </div>\n  ) : \"\"\n}"]},"metadata":{},"sourceType":"module"}